# Faster R-CNN with Mobilenet v1, configuration for MSCOCO Dataset.
# Users should configure the fine_tune_checkpoint field in the train config as
# well as the label_map_path and input_path fields in the train_input_reader and
# eval_input_reader. Search for "PATH_TO_BE_CONFIGURED" to find the fields that
# should be configured.

model {
  wsod {
    proposal_prediction: "edge_boxes_scores"
    proposal_saliency_fn: "saliency_grad_v3"
    proposal_saliency_fn_border_ratio: 0.02
    proposal_saliency_fn_purity_weight: 0.0
    structured_edge_detection_model: "zoo/ximgproc/model.yml"
    edge_boxes_edge_min_mag: 0.1
    edge_boxes_edge_merge_thr: 0.5
    edge_boxes_cluster_min_mag: 0.5
    edge_boxes_max_num_boxes: 300
    use_score_map: true
    score_map_use_vocabulary: true
    score_map_vocabulary_file: "configs/name_to_class_id.csv"
    score_map_vocabulary_use_top_k: 100
    wsod_groundtruth_nms_score_threshold: -1000.0
    wsod_groundtruth_nms_iou_threshold: 0.5
    wsod_groundtruth_max_proposals: 3
    name_to_class_id_file: "configs/name_to_class_id.csv"
    class_id_to_name_file: "configs/class_id_to_name.csv"
    wsod_mil_cls_loss_weight: 1.0
    saliency_model {
      [GAPModel.ext] {
        common_dimensions: 50
        cnn_name: "mobilenet_v1"
        cnn_weight_decay: 0.0
        cnn_feature_map: "Conv2d_13_pointwise"
        vocabulary_file: "output/coco_vocab.txt"
        vocabulary_weights_file: "output/coco_vocab_50d.npy"
        use_saliency_score: true
        triplet_loss_margin: 0.1
        triplet_loss_use_semihard: true
        image_regularizer_weight: 0.0
        text_regularizer_weight: 0.0
        image_proj_hyperparams {
          op: CONV
          activation: NONE
          regularizer {
            l2_regularizer {
              weight: 0.0
            }
          }
          initializer {
            truncated_normal_initializer {
              mean: 0.0
              stddev: 0.03
            }
          }
          batch_norm {
            decay: 0.999
            center: true
            scale: true
            epsilon: 0.001
          }
        }
        image_saliency_hyperparams {
          op: FC
          activation: NONE
          regularizer {
            l2_regularizer {
              weight: 0.0
            }
          }
          initializer {
            truncated_normal_initializer {
              mean: 0.0
              stddev: 0.03
            }
          }
          batch_norm {
            decay: 0.999
            center: true
            scale: true
            epsilon: 0.001
          }
        }
        word_saliency_hyperparams {
          op: FC
          activation: NONE
          regularizer {
            l2_regularizer {
              weight: 0.0
            }
          }
          initializer {
            truncated_normal_initializer {
              mean: 0.0
              stddev: 0.03
            }
          }
          batch_norm {
            decay: 0.999
            center: true
            scale: true
            epsilon: 0.001
          }
        }
      }
    }
    num_classes: 90
    image_resizer {
      fixed_shape_resizer {
        height: 448
        width: 448
      }
    }
    feature_extractor {
      type: 'faster_rcnn_mobilenet_v1'
      first_stage_features_stride: 16
    }
    first_stage_anchor_generator {
      grid_anchor_generator {
        scales: [0.25, 0.5, 1.0, 2.0]
        aspect_ratios: [0.5, 1.0, 2.0]
        height_stride: 16
        width_stride: 16
      }
    }
    first_stage_box_predictor_conv_hyperparams {
      op: CONV
      regularizer {
        l2_regularizer {
          weight: 1e-12
        }
      }
      initializer {
        truncated_normal_initializer {
          stddev: 0.01
        }
      }
    }
    first_stage_nms_score_threshold: -1000.0
    first_stage_nms_iou_threshold: 0.7
    first_stage_max_proposals: 100
    first_stage_localization_loss_weight: 2.0
    first_stage_objectness_loss_weight: 1.0
    initial_crop_size: 14
    maxpool_kernel_size: 2
    maxpool_stride: 2
    second_stage_batch_size: 1
    second_stage_box_predictor {
      mask_rcnn_box_predictor {
        use_dropout: false
        dropout_keep_probability: 1.0
        fc_hyperparams {
          op: FC
          regularizer {
            l2_regularizer {
              weight: 1e-12
            }
          }
          initializer {
            variance_scaling_initializer {
              factor: 1.0
              uniform: true
              mode: FAN_AVG
            }
          }
        }
      }
    }
    second_stage_post_processing {
      batch_non_max_suppression {
        score_threshold: 0.0
        iou_threshold: 0.6
        max_detections_per_class: 100
        max_total_detections: 300
      }
      score_converter: SOFTMAX
    }
    second_stage_localization_loss_weight: 2.0
    second_stage_classification_loss_weight: 1.0
  }
}

train_config: {
  freeze_variables: "wsod"
  batch_size: 1
  optimizer {
    momentum_optimizer: {
      learning_rate: {
        manual_step_learning_rate {
          initial_learning_rate: 0.002
          schedule {
            step: 900000
            learning_rate: .0002
          }
          schedule {
            step: 1200000
            learning_rate: .00002
          }
        }
      }
      momentum_optimizer_value: 0.9
    }
    use_moving_average: false
  }
  gradient_clipping_by_norm: 10.0
  fine_tune_checkpoint: "zoo/mobilenet_v1_1.0_224/mobilenet_v1_1.0_224.ckpt"
  fine_tune_checkpoint_type: "classification"
  from_detection_checkpoint: false
  # Note: The below line limits the training process to 200K steps, which we
  # empirically found to be sufficient enough to train the COCO dataset. This
  # effectively bypasses the learning rate schedule (the learning rate will
  # never decay). Remove the below line to train indefinitely.
  num_steps: 1000000
  data_augmentation_options {
    random_horizontal_flip {
    }
  }
}

train_input_reader: {
  caption_tf_record_input_reader {
    input_path: "/own_files/yekeren/WSOD/output/coco_train.record-*-of-00100" 
  }
  label_map_path: "configs/mscoco_label_map.pbtxt"
}

eval_config: {
  num_examples: 1000
  num_visualizations: 5
  eval_interval_secs: 60
}

eval_input_reader: {
  caption_tf_record_input_reader {
    input_path: "/own_files/yekeren/WSOD/output/coco_val.record-*-of-00050" 
  }
  label_map_path: "configs/mscoco_label_map.pbtxt"
  shuffle: false
  num_readers: 1
  num_epochs: 1
}
